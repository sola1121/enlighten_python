协程

并发编程: 多进程   多线程   IO多路复用

定义: 纤程或又叫微线程, 协程本质实际只有一个线程在运行

工作原理: 通过应用层记录程序的上下文栈区, 实现程序运行中的跳跃. 进而实现选择代码段执行.

优点:
    无需多线程切换的开销
    资源消耗非常少
    无需进行同步互斥操作
    对IO操作并发性极好
缺点:
    无法利用计算机多核资源
    如果程序阻塞会阻塞整个程序运行

python实现协程基本原理 yield语句

使用第三方协程包 greenlet

对greenlet进行包装的协程第三方库 gevent
    gevent.spawn(func, argv)
        功能: 将func变为协程事件并启动
        参数: func 事件函数
              argv 多项, 为func的参数
        返回值: 协程对象
    
    gevent.join()
        功能: 回收协程
        参数: 要回收的协程对象

    gevent.joinall()
        功能: 回收协程
        参数: 列表, 里面可以有多个协程对象

    gevent.sleep()
        功能: 模拟IO阻塞的情况
        参数: n 睡眠秒数

    from gevent import monkey   库中的插件
    monkey.path_all()
        功能: 在导入socket模块前使用, 可以将socket模块IO设置为非阻塞

