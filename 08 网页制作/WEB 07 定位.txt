知识点回顾与补充
行内元素与块级元素
    块级元素
        只要在网页中能独占一行/一块的元素都称为块级元素, 简称块元素
        如: p, h1~h6, div, ol, ul, form, table,
            section, nav, header, article, aside, footer, details, summary
        作用: 都可以做布局
        注: 所有的块元素都会具备align属性
        注意: p标签是不能嵌套块级元素的
    块级元素标签：块级大多为结构性标记
    
    行内元素
        多个元素能够在一行内显示, 就是行内元素
        如: span, i, b, s, u , sup, sub
        作用: 处理文本样式
    行内元素标签：行内大多为描述性标记
    
---------------------------------------

定位
1. 什么是定位
    表示的是元素在网页中的位置
2. 定位的分类
    在css中定位主要分为以下几类
    1) 普通流定位(默认定位方式)
    2) 浮动定位 ☭
    3) 相对定位
    4) 绝对定位
    5) 固定定位


1) 普通流定位
    普通流定位, 又称文档流定位, 是页面中默认的定位方式. 典型的"流式布局"
    特点:
        (1) 每个元素在页面中都有自己的位置, 并占据一定的空间
        (2) 每个元素都是从其父元素的左上角开始排列的
        (3) 每个元素基本上都是按照从左到右, 从上到下的方式排列的
            块级元素, 从上到下, 每个独占一行
            行内元素&行内块元素, 从左到右, 排列不下式换行

2) 浮动定位
    浮动元素的特点
        将元素设置为浮动定位, 元素将具备以下特点:
            (1) 浮动元素会被排除在文档流之外 - 脱离文档流, 元素将不在占据页面空间
            (2) 剩余未浮动元素会上前占位
            (3) 浮动定位的元素会停靠在父元素的左边或右边或其他已浮动元素的边缘上
            (4) 浮动只能在当前行浮动   * 不会突破前文档流中行级元素
            (5) 浮动解决的问题: 让多个块级元素在一行内显示的问题
    语法
        属性: float
        取值
            (1) 默认值 none
                没有任何浮动效果
            (2) left
                浮动到父元素的左边, 或停靠在左边已有的浮动元素的边缘上
            (3) right
                浮动到父元素的右边, 或停靠在右边已有的浮动元素的边缘上
    浮动引发的特殊效果
        (1) 如果父元素显示不下所有以浮动子元素的话, 那么最后一个将换行, 但有可能被卡住
        (2) 元素一旦浮动起来之后, 就将变成块级元素
            行内元素一旦浮动, 就允许修改尺寸
        (3) 元素一旦浮动起来后, 在未指定宽度的情况下, 宽度将由内容来决定
            主要针对块级元素
        (4) 文字, 图片, 行内元素时采用环绕的方式来排列的, 是不会被浮动元素压在底下的
    清除浮动效果
        元素一旦浮动起来之后, 后面的元素要上前占位, 有可能被浮动元素压在低下. 
        如果元素不想被压在底下的话, 可以选择清除浮动影响, 其将放弃占位.
        属性: clear
        取值
            none 
                默认值, 不做任何清除浮动的操作
            left
                清除当前元素前面元素左浮动所带来的影响, 即不会被前面元素左浮动而压在底下
            right
                清除当前元素前面元素右浮动所带来的影响, 即不会被前面元素右浮动而压在底下
            both
                清除当前元素前面元素所有浮动效果带来的影响, 不会去占位.
    浮动元素对父元素高度的影响
        由于浮动会脱离了文档流, 所以是不占据页面空间的, 那么也就不占父元素空间. 
        那么父元素高度是以未浮动的子元素的高度为准.
        解决父元素的的高度问题
            (1) 为父元素设置高度
                弊端: 不一定每次都清楚的知道父元素的高度
            (2) 设置父元素也浮动
                弊端: 会对父元素后面的元素产生位置的影响
            (3) 设置父元素的overflow为hidden或auto
                这是空间上的溢出
                弊端:如果有溢出要显示的元素, 也一同被隐藏
            (4) 在父元素中追加空块级元素, 并设置其clear属性为both (推荐, 无弊端)

3) 相对定位, 绝对定位, 固定定位
    相关属性
        (1) 定位方式
            属性: position
            取值
                static - 静态的, 默认值
                relative - 相对定位
                absolute - 绝对定位
                fixed - 固定定位
            注意: 将元素的position设置为relative/absolute/fixed中任意一种的话, 那么该元素就被称为"已定位元素"
        (2) 偏移属性(共四个)
            作用: 配合已定位元素实现位置的移动
            属性: top / right / bottom / left
            取值: 以px为单位的数值
                top: 以元素的上边为基准边移动元素
                    取值为正, 元素下移; 取值为负, 元素上移
                right: 以元素的右边为基准边移动元素
                    取值为正, 元素左移; 取值为负, 元素右移
                bottom: 以元素的下边为基准边移动元素
                    取值为正, 元素上移; 取值为负, 元素下移
                left: 以元素的左边为基准边移动元素
                    取值为正, 元素右移; 取值为负, 元素左移
                记忆, 取负值向其英文表示方向移动
            
        (3) 相对定位
            什么是相对定位
                元素会相对于它原来位置偏移某个距离
            场合
                元素位置微调时使用相对定位
            语法
                属性: position
                取值: relative
                配合着偏移属性实现位置移动
            注: 元素发生相对定位移动后, 其原先位置依然会被保留, 不会让别的元素占据
                行内元素依然是行内元素, 块级元素依然是块级元素

        (4) 绝对定位
            什么是绝对定位&绝对定位的特点
                绝对定位的元素会脱离文档流, 不占页面空间
                绝对定位的元素会相对于离他最近, 已定位的(相对,绝对,固定定位的元素), 祖先元素去实现位置的初始化
                如果元素没有已定位的祖先元素, 那么元素将相对于body去实现位置的初始化
            语法
                属性: position
                取值: absolute
                配合着偏移属性事项时位置的定位

        (5) 固定定位
            什么是固定定位
                让元素固定在浏览器窗口的某个位置处, 不会随着滚动条的滚动而发生位置的改变
            语法
                属性: position
                取值: fixed
                配合着偏移属性 实现元素位置的固定
            注意:
                固定定位的元素永远都是相对于body元素实现位置初始化的
                固定定位的元素也会变成块级元素

---------------------------------------

堆叠顺序
    什么是堆叠顺序
        已定位元素们堆叠在一起的排列顺序
    语法
        属性: z-index
        取值: 无单位的数字, 数字越大元素越靠上
        默认为 0 
    注意
        (1) 如果堆叠顺序相同的话, 则后来者居上
        (2) 只有已定位的元素才能使用z-index
            relative/absolute/fixed
        (3) 父子元素之间, 永远都是子压在父上, 是不受堆叠顺序影响的

        


