CSS

1. css介绍
    CSS: Cascading Style Sheets
    HTML: 搭建网页结构
    CSS: 修饰和美化网页

2. CSS使用方式
    1. 内联方式
        又称为: 行内样式, 内联样式
        特点: 将CSS的内容定义在单独的HTML标签中
        语法:
            <标记 style="样式声明">
            样式声明就是要修饰的样式效果
                1) 样式声明是由样式属性和属性值来组成的
                2) 属性和值之间使用: 连接
                    <标记 style="属性: 值">
                3) 在一个style中允许出现多个样式声明, 多个样式声明之间用 ; 隔开
                    <标记 style="属性1: 值1; 属性2: 值2;">
        常用的属性和值
            1) 文字大小
                属性: font-size
                取值: 以px为单位的数字
            2) 文本颜色
                属性: color
                取值: 取值为表示颜色的单词
            3) 背景颜色
                属性: backgroud-color
                取值: 取值为表示颜色的单词
    2. 内部样式表
        作用: 让定义好的样式能够使用在当前页面的多个元素上
        语法
            <head>
                <style>
                    css样式规则内容
                </style>
            </head>
        样式规则
            由选择器和样式声明组成的
            目的: 为了声明一组独立的样式
            选择器: 规范了页面中哪些元素能够使用声明好的样式
                选择器{
                    属性1: 值1
                    属性2: 值2
                    ...
                }
    3. 外部样式表
        作用: 
            将声明好的样式应用在多个网页中
            将样式规则生命在独立的css文件中(*.css)
            在使用的网页中对css文件进行引用即可
        使用步骤
            声明
                创建.css文件, 并编写css样式规则
            引用
                <head>
                    <link rel="stylesheet" href="css文件的路径">
                </head>

样式表的特征
    继承性
        大部分的css属性时可以由父元素(父标签)传承给子元素(子标签)的
    层叠性
        允许为一个元素定义多种的使用方式或多个样式规则
        如果样式的声明之间不冲突的话, 那么所有的样式声明都可以应用在元素上
    优先级
        允许为一个元素定义多种的使用方式或多个样式规则, 如果样式声明冲突的话, 会按照不同方式的优先级来应用样式
        浏览器缺省设置   低
        内部或外部样式表 中
            就近原则: 后定义者优先
        内联方式        高

---------------------------------------

CSS选择器
    作用
        规范了页面中哪些元素能够使用声明好的样式
    目的
        为了匹配页面的元素
    1) 元素选择器
        特点:
            由标记名称作为选择器, 主要匹配页面中指定标记所对应的所有元素
        语法
            标记{
                样式声明
            }
    2) 类选择器
        特点:
            允许被任意元素所引用的选择器
        语法
            .类名{
                样式声明
            }
            类名: 由字母, 数字, _, -组成
                  数字不能开头
        引用
            <标记 class="类名">
        特殊用法
            (1) 分类选择器的定义方式
                允许将元素选择器和类选择器结合到一起使用, 为了实现对某种元素不同样式的细分控制
                语法
                    元素选择器.类选择器{
                        样式声明
                    }
                    示例:
                        div.import{ ... }   //将会匹配到div中的import类标签
            (2) 多类需择期的引用方式
                允许让一个元素同时引用多个类选择器, 多个类选择器之间使用空格隔开
                .c1{ ... }
                .c2{ ... }
                .c3{ ... }
                <标记 class="c1 c2 c3">
    3) id选择器
        id的作用
            在HTML中, 每个元素都允许设置一个id属性, 主要用于表示该元素在网页中独一无二的标志
            <div id="main-content"></div>
        id选择器
            为了匹配页面中指定id值的元素
        语法
            #id值{
                样式声明
            }
    4) 群组选择器
        作用
            定义多个选择器们的共有样式
            定义方式式一个以 , 隔开的选择器列表
        语法
            选择器1, 选择器2, 选择器3, ...{
                样式声明
            }
    5) 后代选择器
        作用
            依托于元素的后代关系来匹配元素(不限制层级)
        语法
            选择器1 选择器2{
                样式声明
            }
    6) 子代选择器
        作用
            依托于元素的子代关系来匹配元素(层级依次, 依次向下一个确定的子代)
        语法
            选择器1>选择器2{
                样式声明
            }
    7) 伪类选择器
        作用
            匹配元素不同状态的选择器
            如: 超链接a标签具备四个状态
                状态1: 链接未被访问时的状态
                    文本为蓝色, 并有下划线
                状态2: 鼠标悬停在元素上的状态
                    鼠标变成了"手"
                状态3: 链接被激活时(鼠标点击时)
                    文本变为暗红色
                状态4: 当访问过后的时候
                    文本颜色变为紫红色
        语法
            : 伪类状态
            通常会配合其他元素一起使用
            选择器:伪类状态{
                样式声明
            }
            : 伪类状态: 匹配状态
        (1) 链接伪类(超链接专有)
            :link
                匹配超链接未被访问时的转态
            :visited
                匹配超链接访问后的状态
        (2) 动态伪类
            :hover
                匹配当鼠标悬停在元素上面时的状态
            :active
                匹配元素被激活时的状态
            :focus
                匹配获取焦点时的状态(文本框,密码框使用居多)
    选择器的优先级
        当多个选择器能够同时用到一个元素上时, 并且样式发生冲突的话, 则要按照不同选择器的优先级来应用样式
        选择器的优先级看"权值"
           +-------------------+
           | 选择器      取值   |
           +-------------------+
           | 元素选择器    1    |
           | 类/伪类选择器 10   |
           | id选择器     100   |
           | 内联方式     1000  |
           +-------------------+
        如果是复杂的选择器(后代，子代，分类)的计算方式是将选择器们的权值累加
        
    
