1. 用于实例的函数
    isinstance(obj, class_or_tuple)
    返回这个对象obj是否是某个类创建的对象,或者某些类中的一个类的对象,如果是返回True,否返回False
    示例:
    isinstance(1+2j, (int, tuple, complex))   # 返回True


    对象的属性管理函数
        getattr(obj, name[, default])
        从一个对象的到对象的属性, getattr(x, 'y')等同于x.y当属性不存在时,如果给出default参数,则返回default,如果没有给出default,则产生一个AttributeError错误

        hasattr(obj, name)
        用给定的name返回对象obj是否有此属性,此种做法可以避免getattr(obj, name)时引发错误, 他返回True或False

        setattr(obj, name, value)
        给对象obj的名为name的属性设置相应的值, setattr(x, 'y', v)等同于x.y = v

        delattr(obj, name) 
        删除对象obj中name属性, delattr(x, 'y') 等同于del x.y

    注: 参数形式是 (对象, 对象中的属性(变量)名)


2. 用于类的函数:
    issubclass(cls, class或tuple) 
    判断一个类是否继承自其它的类,如果此类cls是class或tuple中的派生类,则返回True,否则返回False

    示例:
    class A:
        pass
    class B(A):
        pass
    class C(B):
        pass

    issubclass(C, B)   # True
    issubclass(A, B)   # False
    issubclass(C, (A, list))   # True
    issubclass(C, (int, str))   # False

    查看内建类的继承关系:
    >>> help(__builtins__)

    可知所有类都是Python中object的子类
