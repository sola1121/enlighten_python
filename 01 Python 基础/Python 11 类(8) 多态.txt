多态  polymorphic

什么是多态:
    字面意思: 多种状态
    多态是指有继承/派生关系的类中,调用基类对象的方法,实际能调用子类的覆盖方法的现象叫做多态

说明:
    多态调用的方法与对象相关,不与类型相关
    Python的全部对象都只有运行时状态(动态), 没有C++/Java里的静态编译(静态)

示例:
class Shape:
    def draw(self):
        print("shape.draw called.")

class Point(shape):
    def draw(self):
        print("write a point.")

class Circle(Point):
    def draw(self):
        print("wirte a circle.")

def my_draw(s):
    s.draw()    # 此处显现多态

shape1 = Circle()
shape2 = Point()
my_draw(shape1)   # wirte a circle.
my_draw(shape2)   # wirte a point.

注: Python的多态是动态的

根据类型来判断是用哪个实例方法(成员函数)

