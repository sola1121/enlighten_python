异常(基础) exception

什么是错误
    由于逻辑或语法等导致一个程序无法正常执行的问题

什么是异常
    异常是代码在执行过程中出现的错误, 会造成程序的终止(Error)
    异常是程序出错时标识的一种状态
    当异常发生时,程序不会再向下执行,而转去调用此函数的地方,待处理此错误恢复为正常状态

异常的作用
  通知上层调用者有错误产生需要处理
  用作信号通知


异常相关的语句:
    try-except
    try-finally
    raise 语句
    assert 语句


try 语句

try-except-else-finally语句的语法:

try:
    可能触发异常的语句
except 错误类型1 [as 变量1]:
    异常处理语句1
except 错误类型2 [as 变量2]:
    异常处理语句2
...
except:
    发生其他异常时处理语句
else:
    未发生异常语句
finally:
    最终语句,一定被执行,不论有无异常

except的使用 
    except 语句可以同时捕获多个不同类型的错误 
    如
        except (ZeroDivisionError, ValueError) as ex_err:
            ...

    当except不写捕获的类型时,可以捕获任意类型
    如
        except:
            ...

    通常, 可以通过except Exception 捕获其派生的所有异常
    如
        except Exception as ex_err:
            ...


作用:
    尝试捕获异常,将程序转为正常执行流程
说明:
    1) as 子句是用于绑定错误对象的变量,可以省略
    2) except 子句可以有一个或多个,但至少要有一个
    3) else 子句最多只能有一个,也可以省略不不写,用于未出现异常执行某个语句
    4) finally 子句最多只能有一个,也可以省略不写,不论是否出现异常,最后一定后执行某个语句


try-else 语句形式

try:
    可能触发异常的语句
except:
    异常处理语句
else:
    未发生异常执行语句


try-finally 语句形式

try:
    可能触发异常的语句
finally:
    最终语句,一定被执行,不论有无异常

说明:
    finally子句不可以省略
    一定不存在except子句
作用:
    通常try/finally语句用来做触发异常时必须要处理的事情
    无论异常是否发生,finally子句都会被执行
注:
    try-finally语句不会更改程序的(正常/异常)状态



异常的穿透
    有嵌套的try-except语句
    当内层的try语句触发异常, 且并未被内层的except捕获, 那么其会向外层的except传递, 如果外层可以将其捕获, 那么会捕获
    如
        try:
            可能触发异常的语句1
            try:
                可能触发异常的语句2
            except NameError:
                处理语句2的异常
        except TypeError:
            处理语句1,2的异常


raise 语句
作用:
  抛出一个异常,让程序进入异常状态
语法:
    raise 异常类型
    或
    raise 异常对象
如
    raise ValueError("值错误")


assert 语句(断言)
语法:
    assert 真值表达式, 错误数据(通常是字符串)
作用:
    当真值表达式为False时,用错误的数据创建一个AssertionError类型的错误,并触发此错误进入异常状态
    等同于:
    if bool(真值表达式) == False:
        raise AssertionError(错误数据)


异常结构
BaseException
 +-- SystemExit
 +-- KeyboardInterrupt
 +-- GeneratorExit
 +-- Exception
      +-- StopIteration
      +-- StopAsyncIteration
      +-- ArithmeticError
      |    +-- FloatingPointError
      |    +-- OverflowError
      |    +-- ZeroDivisionError
      +-- AssertionError
      +-- AttributeError
      +-- BufferError
      +-- EOFError
      +-- ImportError
      |    +-- ModuleNotFoundError
      +-- LookupError
      |    +-- IndexError
      |    +-- KeyError
      +-- MemoryError
      +-- NameError
      |    +-- UnboundLocalError
      +-- OSError
      |    +-- BlockingIOError
      |    +-- ChildProcessError
      |    +-- ConnectionError
      |    |    +-- BrokenPipeError
      |    |    +-- ConnectionAbortedError
      |    |    +-- ConnectionRefusedError
      |    |    +-- ConnectionResetError
      |    +-- FileExistsError
      |    +-- FileNotFoundError
      |    +-- InterruptedError
      |    +-- IsADirectoryError
      |    +-- NotADirectoryError
      |    +-- PermissionError
      |    +-- ProcessLookupError
      |    +-- TimeoutError
      +-- ReferenceError
      +-- RuntimeError
      |    +-- NotImplementedError
      |    +-- RecursionError
      +-- SyntaxError
      |    +-- IndentationError
      |         +-- TabError
      +-- SystemError
      +-- TypeError
      +-- ValueError
      |    +-- UnicodeError
      |         +-- UnicodeDecodeError
      |         +-- UnicodeEncodeError
      |         +-- UnicodeTranslateError
      +-- Warning
           +-- DeprecationWarning
           +-- PendingDeprecationWarning
           +-- RuntimeWarning
           +-- SyntaxWarning
           +-- UserWarning
           +-- FutureWarning
           +-- ImportWarning
           +-- UnicodeWarning
           +-- BytesWarning
           +-- ResourceWarning


异常说明
ZeroDivisionError	除(或取模)零 (所有数据类型)
ValueError	传入无效的参数
AssertionError	断言语句失败
StopIteration	迭代器没有更多的值
IndexError	序列中没有此索引(index)
IndentationError	缩进错误
IOError	输入/输出操作失败
ImportError	导入模块/对象失败
NameError	未声明/初始化对象 (没有属性)
AttributeError	对象没有这个属性
BaseException	所有异常的基类
SystemExit	解释器请求退出
KeyboardInterrupt	用户中断执行(通常是输入^C)
Exception	常规错误的基类
GeneratorExit	生成器(generator)发生异常来通知退出
StandardError	所有的内建标准异常的基类
ArithmeticError	所有数值计算错误的基类
FloatingPointError	浮点计算错误
OverflowError	数值运算超出最大限制
EOFError	没有内建输入,到达EOF 标记
EnvironmentError	操作系统错误的基类
OSError	操作系统错误
WindowsError	系统调用失败
LookupError	无效数据查询的基类
KeyError	映射中没有这个键
MemoryError	内存溢出错误(对于Python 解释器不是致命的)
UnboundLocalError	访问未初始化的本地变量
ReferenceError	弱引用(Weak reference)试图访问已经垃圾回收了的对象
RuntimeError	一般的运行时错误
NotImplementedError	尚未实现的方法
SyntaxError Python	语法错误
TabError	Tab 和空格混用
SystemError	一般的解释器系统错误
TypeError	对类型无效的操作
UnicodeError	Unicode 相关的错误
UnicodeDecodeError	Unicode 解码时的错误
UnicodeEncodeError	Unicode 编码时错误
UnicodeTranslateError	Unicode 转换时错误

以下为警告类型	
Warning	警告的基类
DeprecationWarning	关于被弃用的特征的警告
FutureWarning	关于构造将来语义会有改变的警告
OverflowWarning	旧的关于自动提升为长整型(long)的警告
PendingDeprecationWarning	关于特性将会被废弃的警告
RuntimeWarning	可疑的运行时行为(runtime behavior)的警告
SyntaxWarning	可疑的语法的警告
UserWarning	用户代码生成的警告