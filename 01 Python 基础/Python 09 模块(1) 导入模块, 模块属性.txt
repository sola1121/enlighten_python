2018-02-24
2024-07-28

----------可用来查看模块的函数---------

dir(obj) 函数, 返回作用域内所有的属性(变量)的字符串列表
help(obj) 函数, 可以查看模块相关的文档字符串


dir 函数
格式:
  dir([对象])   返回一个字符串列表
说明:
  如果没有参数调用, 则返回当前作用域内的所有变量的列表
  如果给定一个对象做为参数, 则返回这个对象的所有变量的列表
    1)对于模块, 返回这个模块的全部属性
    2)对于一个类对象, 返回类对象的所有变量, 并递归基类对象的所有属性
    3)对于其它对象返回所有变量, 类变量和基类变


---------------------------------------

模块 module
  模块是一个包含有一系列函数,类,变量组成的程序组
  模块是一个文件,模块文件名常以.py结尾
作用:
  让一些相关的变量,函数,类等有逻辑的组织在一起,使逻辑结构更加清晰
  模块中的变量,函数和类等可提供给其它模块或程序使用
模块的分类:
  1)内建模块(builtins),在解析器内部可以直接使用,大多数使用C语言编写,并经行了编译转换成了字节码
  2)标准库模块,安装python时已安装且可以直接使用,很多都是用python写的
  3)第三方模块(通常为开源),需要自己安装(pip3 install 模块名)
  4)用户自己编写的模块(可以作为其他人的第三方模块)

内置模块
  builtins, sys, time, posix, itertools, ...
标准库模块
  random, math, detetime, os, functools, re, ...


-----------------模块的导入-----------------

模块的导入 import

import 语句
语法:
  import 模块名1 [as 模块映射名1], 模块名2 [as 模块映射名2], ...
示例:
  # 导入数学模块
  import math
  # 导入系统sys模块和os模块
  import sys, os
作用:
  将某模块整体导入到当前模块中

导入的模块使用
  模块名.属性名
  模块名.函数名(实际调用参数)
注: 属性是指模块内的变量

使用help(模块名) 可以查看模块内的变量, 函数, 类等


from-import 语句
语法:
  from 模块名 import 模块的属性名 [as 模块的属性映射名1], 模块的属性名 [as 模块的属性映射名2], ...
作用:
  将某模块内的一个或多个属性导入到当前模块的作用域
示例:
  from math import factorial as fac
  from math import pi, sin, cos


from-import * 语句
语法:
  from 模块名 import *
作用:
  将某模块的所有属性导入到当前模块,实际上是导入模块中的__all__列表
注:
  可以通过设定模块的__all__属性, 规定哪些内容是可以被导入的
  如
  # 在模块文件的开始位置, 更改其__all__属性
  __all__ = ["fun1", fun2]


import imp.reload # 用于重新加载模块 


原理都是要在本地创建响应的变量, 才能使用相应的模块


-----------------模块的属性-----------------

模块的__name__属性
  模块内的__name__属性用于记录模块自身的名字
作用:
  1)记录模块名
  2)用来判断是否为主模块
说明:
  每个模块都有一个变量__name__, 用于绑定此模块的名臣的字符串
  当此模块作为主模块时,__name__绑定"__main__"
  当此模块不是主模块时,__name__绑定其模块名
    如: example.py 其模块名: example


模块的__file__属性
  __file__属性绑定此模块对应的文件路径名,即记录模块所在目录

__doc__属性  属性和模块的文档字符串, 可用help查看


模块的__all__属性
  模块中的__all__列表是一个用来存放可导出属性的字符串列表
作用:
  当用 from xxx import * 时, 只导入__all__列表内的属性
  不会影响import 模块名 的内容导入
  不会影响from 模块名 import 指定内容 的内容导入
示例
  # 所在模块中的任何功能都无法使用
  __all__ = []  # 设置为空列表
  # 规定哪些内容可以被导入
  __all__ = ["fun1", "val1"]  # 使用字符串指出同名内容


模块的隐藏属性:
  模块中以单下划线"_"开头的对象, 在使用 from xxx import * 语句在导入时将不被导入, 通常称这些属性为隐藏属性



