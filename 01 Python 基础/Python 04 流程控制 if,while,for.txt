2018.02.2

if语句
    作用: 让程序更具条件选择性的执行某条语句或某些语句
if语法:
if 真值表达式1:
    语句块1
elif 真值表达式2:
    语句块2
elif 真值表达式3:
    语句块3
...
else:
    语句块
说明:
  1)elif子句可以有0个,一个或多个
  2)else子句最多只能有一个,也可以没有,且只能放在最后
  3)各真值表达式自上而下执行判断,如果其中一个为True,执行期中的语句块结束此if语句的执行
  4)以上所有真值表达式为False时才执行else语句

if语句的真值表达式
    if 100:               等同于      if bool(100):    
        print("真值")                     print("真值")

if语句的嵌套
    if语句本身是由多条子句组成的一条语句
    if语句可以作为语句嵌套到另一个语句的内部

if使用例子:
m = a 
if b > a:
    m = b
print("最大的数", m)

条件表达式
语法: 表达式1 if 真值表达式 else 表达式2   同C语言 ?: 运算符
作用: 
  若果真值表达式的布尔环境值为True时, 执行表达式1, 并返回结果的引用关系, 否则执行表达式2, 并返回结果的引用关系
示例: a = a if a>0 else -a   # 返回绝对值


===============================================================================

循环语句
  while 语句
  for 语句

while 语句
    根据一定的条件,重复执行的一条语句或多条语句
语法: 
  while 真值表达式:
      语句块1
  else:
      语句块2
说明: 
  1)先执行真值表达式,测试布尔值是否为True或False
  2)如果真值表达式值为True,则执行语句块1,然后在回到第1步
  3)如果真值表达式值为False,则执行else子句中的语句块2,然后结束此while
  注: else子句部分可以省略(同if类似)

while 语句的注意事项:
  1)要控制循环真值表达式的值来防止死循环
  2)通常在循环的语句块中通过改变循环变量不控制循环次数和变量走向

while 语句的嵌套:
  示意:
    while 真值表达式1:
        ...
        while 真值表达式2:
            ...
        else:
            ...
    else:
        ...


===============================================================================

for 语句
用来遍历序列或可迭代对象的每一个元素
语法:
  for 变量列表 in 可迭代对象:
      语句块1
  else:
      语句块2
语法说明:
  1)可迭代对象每次提供一个元素依次赋值给变量列表中的变量,赋值完毕后执行语句块1
  2)可迭代对象不再提供元素后, 将执行else子句部分的语句,然后退出循环
  3)else子句部分可以省略(同while语句类似)
  4)当在循环内部使用break终止循环时,else子句部分不会执行,for语句语法缩进同while和if类似,建议用四个空格

for 语句的嵌套
  示意:
    for 迭代器1:
        ...
        for 迭代器2:
            ...
        else:
            ...
    else:
        ...


可迭代对象:
  是指能依次获取数据元素的对象
可迭代对象包括:
  字符串str, 列表list, 元组tuple, 字典dict, 集合set, range等 


break 语句
作用: 
  用于循环语句(while和for)中
  用来终止当前循环语句的执行
语法:
  break
说明:
  当break执行后, 此循环语句break之后的语句将不再执行, 包括else
  break语句通常和if语句组成使用
  break语句终止循环时,循环语句的else子句不会被执行
  break语句只能终止当前循环语句的执行,如果有循环嵌套时,不会跳出嵌套的外层循环
  break语句只能在循环语句(while/for)内部使用


continue 语句
作用: 
  用于循环语句(while和for)中, 不再执行本次循环内continue之后的语句, 重新开始一次新的循环
语法:
  continue
continue语句说明:
  1)在for语句中执行continue语句,将会从可迭代对象中取下一个元素,绑定在变量后在次进行循环
  2)在while语句中执行continue语句,将会直接跳转到while语句的真值表达式处重新判断循环条件在决定是否开始新的循环


死循环 death loop:
  死循环是指循环条件一直成立的循环
  死循环通常用break语句来终止循环
  死循环的else子句永远不会执行


