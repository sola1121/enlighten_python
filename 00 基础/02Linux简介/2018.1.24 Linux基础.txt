1.通配符
  * 匹配任意多个字符(所有)
  ? 匹配一个任意字符
  示例
  ls *.txt
  rem -rf *.txt
  la a?

2.文本编辑器 vi/vim
  1)格式: vi 文件名    (文件存在打开,不存在创建)
  2)如何编辑
  3)vi的三种工作模式
    正常模式(启动后进入的模式)
    插入模式 该模式下可以编辑文本
    : 命令模式
  4)文本写入步骤
    vi 文件名
    正常模式 --> 插入模式
      a 在当前光标的右侧插入
      i 在当前光标的前面去插入
      o 在当前光标的下一行去插入
    编辑完成后, 按ESC键, 由 插入模式 --> 正常模式
    正常模式 --> 命令行模式 shift + :
    在 : (命令行)下输入如下内容如下内容
      :w 保存write
      :wq 保存并退出 write quit
      :q 不保存退出 quit
      :q! 强制退出
    快捷键
      正常模式下
        yy 复制光标所在行 5yy
        dd 删除/剪切光标所在行 8dd
        p (paste)粘贴到光标所在的下一行
        u 回退
        
3.cp 复制文件/目录
  格式
      复制文件: cp 源文件 目标文件
      复制目录: cp -r 目录1 目录2   或者    cp -a 源目录 目标目录 (使用-a可以把文件属性也拷贝)
  
4.mv 剪切/重命名
  格式
    重命名: mv 原文件名 目标文件名
            mv 原目录名 目标目录名
    剪切: mv 文件名 路径/[新文件名]
          mv 目录名 路径/[新目录名]
  
5.cat 查看文件内容(在终端输出)
  cat 文件名
  示例: cat /etc/passwd

6.more 分屏查看文件内容
  常用操作
    回车 下一行
    空格 下一屏
    q    退出

7.date 显示当前系统的时间
  date +%F 显示 年-月-日
  date +%H:%M:%S 显示 时:分:秒   ":"是字符
  
8.head 查看文件的前几行
  格式: head -n 文件名   n是要显示的行数, 无此参数默认为10
    head -5 /etc/passwd
    head /etc/passwd

9.tail 查看文件的后几行
  格式: tail -n 文件名   n是要显示的行数, 无此参数默认为10
    tail -5 /etc/passwd
    tail /etc/passwd
  
10.find 查找文件或目录
  格式: find 搜索的目录 -name "文件名或目录名"

11.grep 在文件中查找指定内容的行,查找文件内
  格式: grep "查找的内容" 文件名
    -n : 显示行号
    -r : 递归搜索文件夹内的文件
  示例
    grep "star" ~/test/little_star
    grep "st*" little_star 匹配 s+(0到多个t)的单词的行

12.wc 统计文件有多少行
  格式: wc -l 文件名
  示例
    wc -l /etc/passwd

13.echo 终端中显示文本
  格式: echo "文本内容"

14.输出重定向 >  把输出到终端的内容输出到指定文件
  格式: 命令 > 文件名
  示例
    echo "Python" > /home/tarena/python.py
    ls > /home/tarena/python.py
  注意
    如果文件存在,则覆盖原文件
    如果文件不存在,则创建一个文件
  
15.输出追加重定向 >>  把输出到终端的内容输出到指定文件的末尾
  格式 命令 >> 文件名
  示例
    echo "MySQL" >> Python.py
    cat /etc/passwd >> python.py
    
16.tar
  1)打包并压缩
    格式: tar -zcvf 新建压缩包名字.tar.gz 要压缩的目录或文件名集合
              -zcvf: zip create view file
          tar -zcvf new.tar.gz little_star
    注意: 压缩包名一般以 .tar.gz 结尾
  2)解压缩
    格式: tar -zxvf 压缩包名字 -C 路径     不用-C参数默认为所在目录

17.gzip, gunzip
  1)gzip   用zip压缩算法对文件进行压缩, 生成压缩后文件
    格式: gzip 文件名
  2)gunzip  对用zip压缩的.gz文件进行解压缩
    gunzip 文件名
  注: 不能压缩目录, 只用于具体文件

18.管道 |  把前面命令的输出,作为后面命令的输入
  格式: 命令1 | 命令2
  示例
    ls | grep "1801"
    cat /etc/passwd | tail -8
    
19.文件或目录的权限
  1)查看权限 ls -l 文件名或目录名
    -rw-rw-r-- 1 tarena tarena 100 1月  24 16:00 C_plus.cpp
    0123456789   用户名 用户组
    0 代表类型
      d 代表目录
      - 代表文件
    123
      所有者权限
    456 
      表示同组其他用户具有的权限
    789
      其他用户具有的权限
  2)权限类型
    r: 读权限
    w: 写权限
    x: 执行权限
    
20.chmod 修改文件权限
  格式: chmod 选项 文件
    +r 增加读权限
    -r 去掉读权限
    +w 增加些权限
    -w 去掉些权限
    +x 增加执行权限
    -x 去掉执行权限
    示例: +rw +rwx -rwx
  分类
    a : (all)所有用户 chmod a+xf 文件 
    u : (user)所有者用户 chmod u+x 文件
    g : (group)所属用户组 chmod g-w 文件 
    o : (other)其他用户 chmod o-r 文件 
  示例
    chmod a+x d.txt 
    chmod u-rwx d.txt 
    chmod o-r d.txt
    chmod g-w d.txt
  以数字方式去修改文件权限
    r : 4
    w : 2
    x : 1
    百位 对应权限位123  4+2+1 读4 写2 执行1
    十位 对应权限位456  4+2+1 读4 写2 执行1
    个位 对应权限位789  4+2+1 读4 写2 执行1
    chmod 764 d.txt 所属用户7 同组用户6 其他4
    chmod 664 d.txt 所属用户6 同组用户6 其他4
    chmod 777 d.txt 所属用户7 同组用户7 其他7

21.sudo   用超级用户root权限来执行这些命令
  格式: sudo 命令 [选项] [参数]
  常用选项
    -i : 切换到root用户

22.exit命令  退出用户登录
    
23.xxd 可以查看所有文件


数据压缩的种类
  有损压缩
    .mp3 .jpg .mp4 ...
  无损压缩
    .gz .png .rar .xz ...
    
非正常写法们:
    1)tar xf 压缩包的名字   将会直接解压到当前目录
    2)ll 等同于 ls -al
  
  
  
  
  
  
  
  