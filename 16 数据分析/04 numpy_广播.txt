1. numpy广播 Broadcasting

    当两个ndarray数组参与运算时, 要求输入的两个数组shape属性是相同的.
    当两个数组的shape属性不相同的时候, 就会使用numpy的广播机制. 
    广播允许numpy自动扩展较小的数组的维度，以便它们可以与较大的数组兼容进行算术运算。

    规则
        如果两个数组的后缘维度(trailing dimension, 即从末尾开始算起的维度)的轴长度相符
        或其中一个数组的后缘维度的轴长度为1, 则认为他们是广播兼容的, 这时广播会在缺失或长度为1的维度上进行.
    
    由此, 当参与运算的两个ndarray数组的shape不相等时, 如果满足广播规则, 则可以运算, 否则抛出异常ValueError: frames are not aligned.

    示例1
        # shape属性一样, 即形状一样的ndarray数组运算
        a = np.array([[1, 2], [3, 4], [5, 6]])
        b = np.array([[7, 8], [9, 10], [11, 12]])
        c = a * b   # a, b 都是2x3的二维数组
    形状shape相同, 两个数组对应位执行运算

    示例2
        # shape属性不一样, 但是后缘维度相同, 会使用numpy的广播机制, 可以执行相互运算
        a = np.array([[1, 2], [3, 4], [5, 6]])
        b = np.array([7, 8])
        c = a + b   # a是3x2的二维数组, b是一个具有2个元素的一维数组, 即其后缘轴长度为2, 可以执行相互运算
    形状shape不同, 但是后缘维度相同, 广播机制会补齐b数组缺失的维度, 即将第0轴重复扩展3次, 各个位置上的元素再与a相加

    示例3
        # shape属性不一样, 但是有一个数组后缘轴长度为1, 会使用numpy的广播机制, 可以执行相互运算
        a = np.array([[1, 2, 3], [4, 5, 6]])
        b = np.array([[10], [20]])
        c = a + b   # a是2x3的二维数组, b是一个2x1的二维数组, b的后缘轴长度为1, 可以执行相互运算
    形状shape不同, 参与运算的的数组b后缘轴长度为1, 会在轴长度为1的维度上进行广播, 即将b数组在第二维重复3次, 各个位置上的元素再与a相加

